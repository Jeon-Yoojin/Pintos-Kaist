Kernel command line: -q run priority-donate-lower
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  125,952,000 loops/s.
Boot complete.
Executing 'priority-donate-lower':
(priority-donate-lower) begin
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004207c7c
 cr2=0000000000000018 error=               2
rax 0000000000000000 rbx 0000000000000000 rcx 0000000000000000 rdx 0000000000000029
rsp 0000008004234f50 rbp 0000008004234f70 rsi 0000008004000048 rdi 0000008004234068
rip 0000008004207c7c r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00000206
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x800421387d 0x8004208d3d 0x80042090ef 0x800420a209 0x8004218e90 0x80042074de.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 29 ticks
Thread: 0 idle ticks, 29 kernel ticks, 0 user ticks
Console: 1